package com.aohaitong.db;

import com.aohaitong.bean.BroadBean;
import com.aohaitong.bean.ChatMsgBean;
import com.aohaitong.bean.ContactsBean;
import com.aohaitong.bean.FriendApplyBean;
import com.aohaitong.bean.FriendBean;
import com.aohaitong.bean.GroupBean;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig broadBeanDaoConfig;
    private final DaoConfig chatMsgBeanDaoConfig;
    private final DaoConfig contactsBeanDaoConfig;
    private final DaoConfig friendApplyBeanDaoConfig;
    private final DaoConfig friendBeanDaoConfig;
    private final DaoConfig groupBeanDaoConfig;

    private final BroadBeanDao broadBeanDao;
    private final ChatMsgBeanDao chatMsgBeanDao;
    private final ContactsBeanDao contactsBeanDao;
    private final FriendApplyBeanDao friendApplyBeanDao;
    private final FriendBeanDao friendBeanDao;
    private final GroupBeanDao groupBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        broadBeanDaoConfig = daoConfigMap.get(BroadBeanDao.class).clone();
        broadBeanDaoConfig.initIdentityScope(type);

        chatMsgBeanDaoConfig = daoConfigMap.get(ChatMsgBeanDao.class).clone();
        chatMsgBeanDaoConfig.initIdentityScope(type);

        contactsBeanDaoConfig = daoConfigMap.get(ContactsBeanDao.class).clone();
        contactsBeanDaoConfig.initIdentityScope(type);

        friendApplyBeanDaoConfig = daoConfigMap.get(FriendApplyBeanDao.class).clone();
        friendApplyBeanDaoConfig.initIdentityScope(type);

        friendBeanDaoConfig = daoConfigMap.get(FriendBeanDao.class).clone();
        friendBeanDaoConfig.initIdentityScope(type);

        groupBeanDaoConfig = daoConfigMap.get(GroupBeanDao.class).clone();
        groupBeanDaoConfig.initIdentityScope(type);

        broadBeanDao = new BroadBeanDao(broadBeanDaoConfig, this);
        chatMsgBeanDao = new ChatMsgBeanDao(chatMsgBeanDaoConfig, this);
        contactsBeanDao = new ContactsBeanDao(contactsBeanDaoConfig, this);
        friendApplyBeanDao = new FriendApplyBeanDao(friendApplyBeanDaoConfig, this);
        friendBeanDao = new FriendBeanDao(friendBeanDaoConfig, this);
        groupBeanDao = new GroupBeanDao(groupBeanDaoConfig, this);

        registerDao(BroadBean.class, broadBeanDao);
        registerDao(ChatMsgBean.class, chatMsgBeanDao);
        registerDao(ContactsBean.class, contactsBeanDao);
        registerDao(FriendApplyBean.class, friendApplyBeanDao);
        registerDao(FriendBean.class, friendBeanDao);
        registerDao(GroupBean.class, groupBeanDao);
    }

    public void clear() {
        broadBeanDaoConfig.clearIdentityScope();
        chatMsgBeanDaoConfig.clearIdentityScope();
        contactsBeanDaoConfig.clearIdentityScope();
        friendApplyBeanDaoConfig.clearIdentityScope();
        friendBeanDaoConfig.clearIdentityScope();
        groupBeanDaoConfig.clearIdentityScope();
    }

    public BroadBeanDao getBroadBeanDao() {
        return broadBeanDao;
    }

    public ChatMsgBeanDao getChatMsgBeanDao() {
        return chatMsgBeanDao;
    }

    public ContactsBeanDao getContactsBeanDao() {
        return contactsBeanDao;
    }

    public FriendApplyBeanDao getFriendApplyBeanDao() {
        return friendApplyBeanDao;
    }

    public FriendBeanDao getFriendBeanDao() {
        return friendBeanDao;
    }

    public GroupBeanDao getGroupBeanDao() {
        return groupBeanDao;
    }

}
